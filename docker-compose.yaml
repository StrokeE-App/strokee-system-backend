version: '3.8'

services:
  app-strokee-system-api:
    image:  carlos29ac/strokee-api-service:latest
    container_name: strokee-system-api
    restart: always
    depends_on:
      mongo-strokee-system:
        condition: service_started
      rabbitmq-strokee-system:
        condition: service_healthy
    environment:
      MONGOURI: mongodb://mongo-strokee-system:27017/strokeedb
      RABBIT_MQ: amqp://rabbitmq-strokee-system:5672
      PORT: 4001
    ports:
      - "4001:4001"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - strokee_network
  
  app-strokee-system-notification-service:
    image:  carlos29ac/strokee-notification-service:latest 
    container_name: notification-service
    restart: always
    depends_on:
      mongo-strokee-system:
        condition: service_started
      rabbitmq-strokee-system:
        condition: service_healthy
    environment:
      MONGO_URI: mongodb://mongo-strokee-system:27017/strokeedb
      RABBIT_MQ: amqp://rabbitmq-strokee-system:5672
      PORT: 4002
    ports:
      - "4002:4002"
    networks:
      - strokee_network

  mongo-strokee-system:
    image: mongo:6
    container_name: mongo-strokee-system
    restart: always
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - strokee_network

  rabbitmq-strokee-system:
    image: rabbitmq:3-management
    container_name: rabbitmq-strokee-system
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - strokee_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5

networks:
  strokee_network:
    driver: bridge

volumes:
  mongo_data:
